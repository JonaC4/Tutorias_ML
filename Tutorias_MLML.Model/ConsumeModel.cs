// This file was auto-generated by ML.NET Model Builder. 

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Microsoft.ML;
using Tutorias_MLML.Model;

namespace Tutorias_MLML.Model
{
    public class ConsumeModel
    {
        private static Lazy<PredictionEngine<ModelInput, ModelOutput>> PredictionEngine = new Lazy<PredictionEngine<ModelInput, ModelOutput>>(CreatePredictionEngine);

        // For more info on consuming ML.NET models, visit https://aka.ms/mlnet-consume
        // Method for consuming model in your app
        public static ModelOutput Predict(ModelInput input)
        {
            ModelOutput result = PredictionEngine.Value.Predict(input);
            return result;
        }

        public static PredictionEngine<ModelInput, ModelOutput> CreatePredictionEngine()
        {

            
            try
            {

                // Create new MLContext
                MLContext mlContext = new MLContext();

                // Cambiar  @"C:\Users\nombre_usuario de su maquina local
                string modelPath = @"C:\Users\Basti\AppData\Local\Temp\MLVSTools\Tutorias_MLML\Tutorias_MLML.Model\MLModel.zip";

                ITransformer mlModel = mlContext.Model.Load(modelPath, out var modelInputSchema);
                var predEngine = mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);

                return predEngine;

            }
            catch (System.IO.DirectoryNotFoundException )
            {
                
                
                    Console.WriteLine("ANTES DE INICIAR : CAMBIAR @C:\\Users\\Nombre_Usuario de su maquina local");
                
                
                throw;
             }
           
           
               
           
        }
    }
    }

